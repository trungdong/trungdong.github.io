<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Dong Huynh</title><link href="http://trungdong.github.io/" rel="alternate"></link><link href="http://trungdong.github.io/feeds/provenance.atom.xml" rel="self"></link><id>http://trungdong.github.io/</id><updated>2016-12-08T11:40:56+00:00</updated><entry><title>Getting started with provenance</title><link href="http://trungdong.github.io/getting-started-with-provenance.html" rel="alternate"></link><published>2016-12-08T11:40:56+00:00</published><updated>2016-12-08T11:40:56+00:00</updated><author><name>Dong Huynh</name></author><id>tag:trungdong.github.io,2016-12-08:getting-started-with-provenance.html</id><summary type="html">&lt;p&gt;Where to start if you are interested in learning about provenance? tracking
provenance in your application? or just playing with some provenance data?&lt;/p&gt;
&lt;p&gt;This post aims to list all the tools, software, and materials that I know about to everyone find what they need.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ONGOING -- STILL BEING UPDATED&lt;/strong&gt;&lt;/p&gt;
&lt;h2&gt;Provenance concepts&lt;/h2&gt;
&lt;p&gt;PROV is the current standard for provenance (by the World Wide Web Consortium).
I recommend looking at the document roadmap in &lt;a href="https://www.w3.org/TR/prov-overview/"&gt;PROV-OVERVIEW&lt;/a&gt;
first to see what it comprises and what document to read next.&lt;/p&gt;
&lt;p&gt;You might also find the book &lt;a href="http://www.provbook.org/"&gt;Provenance: An Introduction to
PROV&lt;/a&gt; by Luc Moreau and Paul Groth, who chaired the
standardisation of PROV, useful.&lt;/p&gt;
&lt;h2&gt;Libraries&lt;/h2&gt;
&lt;p&gt;Working with PROV in&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Java: &lt;a href="http://lucmoreau.github.io/ProvToolbox/"&gt;ProvToolbox&lt;/a&gt; (with tutorials).&lt;/li&gt;
&lt;li&gt;Python: my &lt;a href="http://prov.readthedocs.io/"&gt;PROV Python package&lt;/a&gt; (&lt;a href="http://trungdong.github.io/prov-python-short-tutorial.html"&gt;tutorial&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;JavaScript: &lt;a href="https://bitbucket.org/provenance/provjs"&gt;ProvJS&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Matlab: &lt;a href="http://www.artefact.tk/software/matlab/provenance/"&gt;Matlab provenance package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Other provenance libraries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;R: &lt;a href="https://github.com/End-to-end-provenance/RDataTracker"&gt;RDataTracker&lt;/a&gt;, &lt;a href="https://github.com/NCEAS/recordr"&gt;recordr&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Software&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://provenance.ecs.soton.ac.uk/store/"&gt;ProvStore&lt;/a&gt;: a free public repository for provenance documents (&lt;a href="https://provenance.ecs.soton.ac.uk/store/help/api/"&gt;REST API&lt;/a&gt; available).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Provenance Data&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href="https://provenance.ecs.soton.ac.uk/store/public/"&gt;Public documents on ProvStore&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://lucmoreau.wordpress.com/category/provenance-in-the-wild/"&gt;Provenance in the wild&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can also generate synthetic provenance data using the &lt;code&gt;-generator&lt;/code&gt; option
provided by the &lt;a href="https://github.com/lucmoreau/ProvToolbox/wiki/provconvert"&gt;provconvert&lt;/a&gt; utility that comes with ProvToolbox (see above).&lt;/p&gt;
&lt;h2&gt;What have I missed?&lt;/h2&gt;
&lt;p&gt;Do let me know by dropping me a message below.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://twitter.com/intent/tweet?screen_name=trungdong" class="twitter-mention-button" data-show-count="false"&gt;Tweet to @trungdong&lt;/a&gt;
&lt;script async src="//platform.twitter.com/widgets.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/p&gt;</summary><category term="PROV-DM"></category><category term="ProvPy"></category><category term="ProvStore"></category><category term="ProvToolbox"></category><category term="software"></category></entry><entry><title>PROV Python 1.5.0 Released!</title><link href="http://trungdong.github.io/provpy-1.5.0.html" rel="alternate"></link><published>2016-10-20T09:11:37+01:00</published><updated>2016-10-20T09:11:37+01:00</updated><author><name>Dong Huynh</name></author><id>tag:trungdong.github.io,2016-10-20:provpy-1.5.0.html</id><summary type="html">&lt;p&gt;I am pleased to announce that, after over a year since &lt;a href="http://trungdong.github.io/provpy-1.4.0.html"&gt;Prov Python 1.4.0&lt;/a&gt;, a new version of &lt;a href="https://pypi.python.org/pypi/prov"&gt;PROV Python library&lt;/a&gt;, version 1.5.0, is now available from PyPI. Thanks to the significant contribution by &lt;a href="http://satra.cogitatum.org/"&gt;Satrajit Ghosh&lt;/a&gt;, the library now supports RDF output and input (following the &lt;a href="https://www.w3.org/TR/prov-o/"&gt;PROV ontology PROV-O&lt;/a&gt;). This new serialisation is backed by &lt;a href="https://github.com/RDFLib/rdflib"&gt;rdflib&lt;/a&gt; and, hence, allows you to read/write PROV from/to all the representation supported by the library, such as &lt;a href="https://www.w3.org/TR/turtle/"&gt;Turtle&lt;/a&gt;, &lt;a href="https://www.w3.org/TR/trig/"&gt;TriG&lt;/a&gt; (for PROV document with bundles), &lt;a href="http://json-ld.org/"&gt;JSON-LD&lt;/a&gt;, etc.&lt;/p&gt;
&lt;p&gt;In addition to the usual bug fixes and minor improvements, some other changes are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;code&gt;direction&lt;/code&gt; parameter can now be specified when generating PNG, PDF, SVG, etc. with &lt;a href="http://prov.readthedocs.io/en/latest/prov.html#prov.dot.prov_to_dot"&gt;&lt;code&gt;prov_to_dot&lt;/code&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Once a PROV document is converted to a &lt;a href="https://networkx.github.io/"&gt;NetworkX&lt;/a&gt; graph, you can convert the graph back to a PROV document with &lt;a href="http://prov.readthedocs.io/en/latest/prov.html#prov.graph.graph_to_prov"&gt;&lt;code&gt;graph_to_prov&lt;/code&gt;&lt;/a&gt; (say after some graph manipulations).&lt;/li&gt;
&lt;li&gt;PROV Python library is now tested with Python 3.5.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;Do you use ProvPy?&lt;/h2&gt;
&lt;p&gt;It is a nice surprise to learn that the PROV Python library is redistributed on &lt;a href="https://conda-forge.github.io/"&gt;Conda Forge&lt;/a&gt; (as I am not an &lt;a href="https://anaconda.org/"&gt;Anaconda&lt;/a&gt; user). If &lt;strong&gt;you&lt;/strong&gt; are using the library in your software, I would love to hear about it! Please &lt;a href="https://twitter.com/intent/tweet?button_hashtag=ProvPy"&gt;tweet&lt;/a&gt; it using the hashtag &lt;a href="https://twitter.com/intent/tweet?button_hashtag=ProvPy"&gt;#ProvPy&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;As always, I would love to hear about any issue or feedback you might have, especially after a significant release of the library. Please report them to the library's &lt;a href="https://github.com/trungdong/prov/issues"&gt;issue tracker&lt;/a&gt;. Many thanks!&lt;/p&gt;
&lt;h2&gt;Getting started&lt;/h2&gt;
&lt;p&gt;If you are new to ProvPy or PROV, look at &lt;a href="http://trungdong.github.io/prov-python-short-tutorial.html"&gt;the tutorial here&lt;/a&gt; to see it in action. Go next to the library's &lt;a href="http://prov.readthedocs.io/"&gt;documentation&lt;/a&gt; to learn more.&lt;/p&gt;
&lt;p&gt;You can also find lots of publicly shared provenance documents available on &lt;a href="https://provenance.ecs.soton.ac.uk/store/"&gt;ProvStore&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If you prefer a Java-based solution, get &lt;a href="http://lucmoreau.github.io/ProvToolbox/"&gt;ProvToolbox&lt;/a&gt; by &lt;a href="http://users.ecs.soton.ac.uk/lavm/"&gt;Luc Moreau&lt;/a&gt;.&lt;/p&gt;</summary><category term="ProvPy"></category><category term="ProvStore"></category><category term="Python"></category><category term="PROV-O"></category><category term="RDF"></category></entry><entry><title>PROV Python 1.4.0</title><link href="http://trungdong.github.io/provpy-1.4.0.html" rel="alternate"></link><published>2015-08-14T16:26:08+01:00</published><updated>2015-08-14T16:26:08+01:00</updated><author><name>Dong Huynh</name></author><id>tag:trungdong.github.io,2015-08-14:provpy-1.4.0.html</id><summary type="html">&lt;p&gt;Last night, I released a new version of &lt;a href="https://pypi.python.org/pypi/prov"&gt;PROV Python library&lt;/a&gt;, version &lt;a href="https://pypi.python.org/pypi/prov/1.4.0"&gt;1.4.0&lt;/a&gt;. It fixes &lt;a href="https://github.com/trungdong/prov/issues/68"&gt;the prov:QUALIFIED_NAME bug&lt;/a&gt; that I had inadvertently introduced since the inception of the library. &lt;a href="http://lucmoreau.github.io/ProvToolbox/"&gt;ProvToolbox&lt;/a&gt; recently fixed the same bug (since &lt;a href="https://lucmoreau.wordpress.com/2015/07/24/what-is-in-provtoolbox-0-7-0/"&gt;version 0.7.0&lt;/a&gt;), and with this release, the two libraries are again compatible with each other.&lt;/p&gt;
&lt;p&gt;This release is somewhat significant as existing provenance documents generated by previous versions of the library &lt;em&gt;may&lt;/em&gt; no longer work with this version (and future versions). Before I discuss the details, the main changes in this release are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Changed the type of qualified names to prov:QUALIFIED_NAME&lt;/li&gt;
&lt;li&gt;Removed XSDQName class and stopped supporting parsing xsd:QName as qualified names&lt;/li&gt;
&lt;li&gt;Replaced pydot dependency with &lt;a href="http://pydotplus.readthedocs.org/"&gt;pydotplus&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Removed support for Python 2.6&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;prov:QUALIFIED_NAME, prov:QualifiedName, and xsd:QName&lt;/h2&gt;
&lt;p&gt;W3C's PROV-DM defined the abstract concept of &lt;a href="http://www.w3.org/TR/2013/REC-prov-dm-20130430/#term-qualified-name"&gt;Qualified Name&lt;/a&gt; but not a concrete type for it. Previously, I wrongly assumed the type for qualified names is &lt;strong&gt;prov:QualifiedName&lt;/strong&gt;, which turned out to be not even a defined concept in any of the PROV documents. The type was then used mainly in &lt;a href="http://www.w3.org/Submission/2013/SUBM-prov-json-20130424/"&gt;PROV-JSON&lt;/a&gt; serialisations produced by the prov library and, sometimes, also seeped into its PROV-N outputs.&lt;/p&gt;
&lt;p&gt;PROV-N, as it happened, did &lt;a href="http://www.w3.org/TR/2013/REC-prov-n-20130430/#expression-literal"&gt;define the type&lt;/a&gt; for PROV's qualified names as &lt;strong&gt;prov:QUALIFIED_NAME&lt;/strong&gt; — a fact somehow escaped me. This release replaced prov:QualifiedName with prov:QUALIFIED_NAME. Hence, literals of prov:QualifiedName type in existing PROV-JSON documents will no longer be recognised as qualified names by prov 1.4.0 and later. However, such documents should still be readable by the library, albeit with different semantics.&lt;/p&gt;
&lt;p&gt;Regarding &lt;strong&gt;xsd:QName&lt;/strong&gt;, the type had been treated as a sub-type of prov:QualifiedName, and hence, had been recognised as qualified names in the prov library. This means that the library would try to resolve the prefix provided in a xsd:QName value to one of the defined namespaces in the containing document. Such behaviour is not expected; in fact, xsd:QName and prov:QUALIFIED_NAME are incompatible types (see &lt;a href="https://github.com/lucmoreau/ProvToolbox/wiki/Qualified-Names-in-ProvToolbox"&gt;Luc's page on Qualified Names&lt;/a&gt; for more information). Hence, I decided to removed XSDQName class from the prov library, effectively removing support for resolving xsd:QName values into qualified names.&lt;/p&gt;
&lt;h2&gt;Python 2.6 no longer supported&lt;/h2&gt;
&lt;p&gt;The 2.6 branch of Python had been at its end of life since Oct 2013 with the &lt;a href="https://www.python.org/download/releases/2.6.9/"&gt;2.6.9 release&lt;/a&gt;. The prov library's support for Python 2.6 had been requiring extra effort in writing codes for it and testing them, in addition to those to support Python 3. With more and more libraries dropping support for Python 2.6 (including networkx and pydotplus, which are used by prov), I think it is time for prov to move on. From version 1.4.0, prov no longer works with Python 2.6. It remains working with, and being tested for, Python 2.7, 3.3, 3.4, and PyPy.&lt;/p&gt;
&lt;h2&gt;pydot and pydotplus&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;pydot&lt;/strong&gt; had been used to represent PROV documents in the DOT format, allowing for the conversion of such documents into SVG, PNG, PDF, and other graphical formats supported by the excellent &lt;a href="http://www.graphviz.org"&gt;Graphviz&lt;/a&gt; package. The pydot, however, have not been updated for over 4 years. The official package does not work with Python 3 and, as a result, we had to use an unofficial fork. In this release, we decided to use &lt;a href="http://pydotplus.readthedocs.org/"&gt;&lt;strong&gt;pydotplus&lt;/strong&gt;&lt;/a&gt;, a drop-in replace for pydot that works with Python 3.&lt;/p&gt;
&lt;p&gt;At the same time, I took the opportunity to create a test for the DOT generation feature of prov. Although I still cannot find a way to verify the graphical outputs programmatically, the test at least exercises the code for this feature over the library's extensive test suite.&lt;/p&gt;
&lt;h2&gt;Endnote&lt;/h2&gt;
&lt;p&gt;As this release introduces some significant changes, I would love to hear about any issue or feedback you might have. Please report them to the library's &lt;a href="https://github.com/trungdong/prov/issues"&gt;issue tracker&lt;/a&gt;. Many thanks!&lt;/p&gt;</summary><category term="ProvPy"></category><category term="ProvStore"></category><category term="Python"></category><category term="PROV-JSON"></category></entry><entry><title>A Short Tutorial for Prov Python</title><link href="http://trungdong.github.io/prov-python-short-tutorial.html" rel="alternate"></link><published>2014-08-07T23:42:26+01:00</published><updated>2014-08-07T23:42:26+01:00</updated><author><name>Dong Huynh</name></author><id>tag:trungdong.github.io,2014-08-07:prov-python-short-tutorial.html</id><summary type="html">&lt;p&gt;Documentation is hard work! I started the work on the &lt;a href="https://pypi.python.org/pypi/prov/"&gt;PROV Python package&lt;/a&gt; nearly &lt;a href="https://github.com/trungdong/prov/graphs/contributors"&gt;three years ago&lt;/a&gt; and yet its &lt;a href="http://prov.readthedocs.org/"&gt;documentation&lt;/a&gt; is still quite lacking. As a small effort to make up for it, I thought a simple tutorial might help a bit.  &lt;/p&gt;
&lt;p&gt;So here it is: &lt;a href="http://nbviewer.ipython.org/github/trungdong/notebooks/blob/master/PROV%20Tutorial.ipynb"&gt;the first tutorial for PROV Python&lt;/a&gt;!  &lt;/p&gt;
&lt;p&gt;It will guide you through:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Installing the Prov package&lt;/li&gt;
&lt;li&gt;Creating a PROV document in Python&lt;/li&gt;
&lt;li&gt;Exporting the document into &lt;a href="http://www.w3.org/TR/prov-n/"&gt;PROV-N&lt;/a&gt; and &lt;a href="http://www.w3.org/Submission/2013/SUBM-prov-json-20130424/"&gt;PROV-JSON&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Displaying the document in a graphical format like the one on the right&lt;/li&gt;
&lt;li&gt;Saving a provenance document in the cloud at &lt;a href="https://provenance.ecs.soton.ac.uk/store/"&gt;ProvStore&lt;/a&gt; and retrieve it back&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All the above can be done in 10-15 minutes!  &lt;/p&gt;
&lt;p&gt;I hope you find &lt;a href="http://nbviewer.ipython.org/github/trungdong/notebooks/blob/master/PROV%20Tutorial.ipynb"&gt;the tutorial&lt;/a&gt; useful. Any suggestion or request, please do &lt;a href="https://github.com/trungdong/notebooks/issues"&gt;let me know here&lt;/a&gt;.&lt;a href="https://www.blogger.com/"&gt;&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;&lt;img alt="PROV-N JavaScript Editor Screenshot" src="http://trungdong.github.io/images/provbook-example.png" /&gt;&lt;/p&gt;
&lt;p&gt;PNG export of a simple example from the book &lt;a href="http://www.provbook.org/"&gt;Provenance: An Introduction to PROV&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Updated 27-Feb-2015&lt;/em&gt;: I added a simple instruction in the tutorial showing how to read (i.e. deserialise) a PROV-JSON file into a ProvDocument instance. In addition, I simplified the section on interacting with &lt;a href="https://provenance.ecs.soton.ac.uk/store/"&gt;ProvStore&lt;/a&gt; by using &lt;a href="http://millar.io/"&gt;Sam Millar&lt;/a&gt;'s &lt;a href="https://github.com/millar/provstore-api"&gt;provstore-api&lt;/a&gt; package.&lt;/p&gt;</summary><category term="PROV-JSON"></category><category term="PROV-N"></category><category term="ProvPy"></category><category term="ProvStore"></category><category term="Python"></category><category term="tutorial"></category></entry><entry><title>PROV-N Javascript Editor</title><link href="http://trungdong.github.io/prov-n-javascript-editor.html" rel="alternate"></link><published>2014-03-21T10:31:59+00:00</published><updated>2014-03-21T10:31:59+00:00</updated><author><name>Dong Huynh</name></author><id>tag:trungdong.github.io,2014-03-21:prov-n-javascript-editor.html</id><summary type="html">&lt;p&gt;After showing the &lt;a href="http://trungdong.github.io/prov-n-textmate.html"&gt;TextMate PROV-N bundle&lt;/a&gt; to my colleagues, one pointed to me the powerful &lt;a href="http://ace.c9.io/"&gt;Ace code editor&lt;/a&gt;, which comes with tools to facilitate adding a new syntax. I found it even easier to work with compared to TextMate's bundle editor. After a day, I managed to port the PROV-N syntax rules to Ace and added some more. This is the result.  &lt;/p&gt;
&lt;p&gt;&lt;img src="http://trungdong.github.io/images/prov-n-js-editor.png" alt="PROV-N JavaScript Editor Screenshot" class="pure-img centered" title="PROV-N JavaScript Editor Screenshot"&gt;&lt;/p&gt;
&lt;p&gt;Try the new &lt;a href="https://provenance.ecs.soton.ac.uk/tools/editor/"&gt;PROV-N editor&lt;/a&gt; on our &lt;a href="https://provenance.ecs.soton.ac.uk/"&gt;Southampton Provenance website&lt;/a&gt; and let me know what you think.&lt;/p&gt;</summary><category term="editor"></category><category term="JavaScript"></category><category term="PROV-N"></category><category term="provenance"></category><category term="syntax highlighting"></category></entry><entry><title>TextMate Bundle for PROV-N</title><link href="http://trungdong.github.io/prov-n-textmate.html" rel="alternate"></link><published>2014-03-19T01:11:00+00:00</published><updated>2014-03-19T01:11:00+00:00</updated><author><name>Dong Huynh</name></author><id>tag:trungdong.github.io,2014-03-19:prov-n-textmate.html</id><summary type="html">&lt;p&gt;The Provenance Notation (&lt;a href="http://www.w3.org/TR/prov-n/"&gt;PROV-N&lt;/a&gt;) has been my chosen representation when it comes to writing provenance. It has a relatively low cognitive cost and easier for humans to read (at least to me), compared to other provenance representations. Even so, I usually found myself making mundane mistakes and typos and have had to repetitively rely on the &lt;a href="https://provenance.ecs.soton.ac.uk/validator/"&gt;Provenance Validator&lt;/a&gt; to check my provenance for syntactical errors. Hence the motivation to find a tool to help write provenance faster with less mistakes.  &lt;/p&gt;
&lt;p&gt;Here comes &lt;a href="http://macromates.com/"&gt;TextMate&lt;/a&gt;!  &lt;/p&gt;
&lt;p&gt;TextMate is a powerful text editor on Mac (which I have only used it lightly, on and off). It provides support for numerous text file formats thanks to the flexible extensibility it offers. Having discovered how to &lt;a href="http://manual.macromates.com/en/language_grammars"&gt;define a new language&lt;/a&gt; in TextMate, I set off trying to find a way to alleviate my pains with PROV-N authoring right away. To cut the story short, here is the results.  &lt;/p&gt;
&lt;p&gt;&lt;img src="http://trungdong.github.io/images/textmate-prov-n-screenshot.png" alt="Screenshot of TextMate with PROV-N syntax highlighting" class="pure-img centered" title="Screenshot of TextMate with PROV-N syntax highlighting"&gt;&lt;/p&gt;
&lt;p&gt;If you like what you see, grab the PROV-N TextMate bundle from my &lt;a href="https://github.com/trungdong/provn-textmate"&gt;github repository&lt;/a&gt;. An installation of TextMate, of course, is required.  &lt;/p&gt;
&lt;p&gt;&lt;img src="http://trungdong.github.io/images/textmate-prov-n-snippets.png" alt="PROV-N Snippets" class="pure-img float-right" title="PROV-N Snippets"&gt;
In addition to the PROV-N syntax highlighting, another bonus provided by the bundle is the &lt;a href="http://manual.macromates.com/en/bundles#tab_triggers"&gt;tab-triggered snippets&lt;/a&gt; for all PROV-N statements. For example, you can just type &lt;span style="font-family: Courier New, Courier, monospace;"&gt;wd⇥&lt;/span&gt; (&lt;span style="font-family: 'Courier New', Courier, monospace;"&gt;⇥&lt;/span&gt; is the tab key) to get &lt;span style="font-family: Courier New, Courier, monospace;"&gt;wasDerivedFrom(, , -, -, -, [])&lt;/span&gt;. The list of all snippets is on the right (or look them up in the Bundles &amp;gt; Provenance Notation menu in TextMate). Please note though that the PROV attributes snippets are available only between the square brackets (i.e. the attributes block) in a statement.  &lt;/p&gt;
&lt;p&gt;Disclaimer: The bundle is my very first attempt and there are many issues remained. Please don't expect it supports all possible valid PROV-N statements.  &lt;/p&gt;
&lt;p&gt;If you are working with PROV-N, I hope you will find this TextMate bundle useful. Contributions and suggestions are very welcome.  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;For Sublime Text users&lt;/strong&gt;: You can install the &lt;a href="https://raw.github.com/trungdong/provn-textmate/master/prov-n.tmbundle/Syntaxes/provn.tmLanguage"&gt;PROV-N language grammar&lt;/a&gt; in Sublime Text to get the same syntax highlighting as shown above. To do this, download and copy the file to the User package folder (Menu: Preferences &amp;gt; Browse Packages...)  &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update&lt;/strong&gt;: A JavaScript code editor supporting the PROV-N syntax is now available. See &lt;a href="http://trungdong.github.io/prov-n-javascript-editor.html"&gt;this post&lt;/a&gt;.&lt;/p&gt;</summary><category term="PROV-N"></category><category term="provenance"></category><category term="syntax highlighting"></category><category term="TextMate"></category></entry></feed>